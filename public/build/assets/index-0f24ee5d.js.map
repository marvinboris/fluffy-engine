{"version":3,"file":"index-0f24ee5d.js","sources":["../../../resources/ts/src/store/actions/frontend/skills.js","../../../resources/ts/src/containers/Frontend/Skills/index.jsx"],"sourcesContent":["import * as actionTypes from '../actionTypes';\r\n\r\nconst prefix = '/api/';\r\n\r\nexport const resetSkills = () => ({ type: actionTypes.SKILLS_RESET });\r\nconst skillsStart = () => ({ type: actionTypes.SKILLS_START });\r\nconst skillsSuccess = data => ({ type: actionTypes.SKILLS_SUCCESS, ...data });\r\nconst skillsFail = error => ({ type: actionTypes.SKILLS_FAIL, error });\r\nexport const getSkills = () => async dispatch => {\r\n    dispatch(skillsStart());\r\n\r\n    try {\r\n        const res = await fetch(`${prefix}skills`);\r\n        const resData = await res.json();\r\n\r\n        dispatch(skillsSuccess(resData));\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch(skillsFail(error));\r\n    }\r\n}\r\n\r\nexport const getService = slug => async dispatch => {\r\n    dispatch(skillsStart());\r\n\r\n    try {\r\n        const res = await fetch(`${prefix}skills/${slug}`);\r\n        const resData = await res.json();\r\n\r\n        dispatch(skillsSuccess(resData));\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch(skillsFail(error));\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Loading from '../../../components/UI/Preloaders/Loading';\r\n\r\nimport SectionTitle from '../../../components/Frontend/UI/Title/SectionTitle';\r\n\r\nimport { getSkills, resetSkills } from '../../../store/actions/frontend/skills';\r\n\r\nimport './Skills.scss';\r\n\r\nclass Skills extends Component {\r\n    state = {\r\n        isMounted: false,\r\n    }\r\n\r\n\r\n\r\n    // Lifecycle methods\r\n    componentDidMount() {\r\n        this.props.get();\r\n        this.setState({ isMounted: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            content: {\r\n                cms: {\r\n                    pages: { frontend: { pages: { skills: cms } } }\r\n                },\r\n            },\r\n            frontend: { skills: { loading, skills = [], experiences = [] }, }\r\n        } = this.props;\r\n        const { isMounted } = this.state;\r\n        const lang = localStorage.getItem('frontend_lang');\r\n\r\n        if (!this.state.isMounted) {\r\n            document.title = `${this.props.content.cms.pages.frontend.header.menu.skills} | ${document.head.querySelector('meta[name=\"base-title\"]').content}`;\r\n            document.querySelector('meta[name=description]').content = cms.description\r\n        }\r\n\r\n        const skillsContent = skills.map((skill, index) => {\r\n            return <div key={JSON.stringify(skill)} className=\"skill\" style={{ \"--skills-skill-i\": index + 1 }}>\r\n                <div className='title'>{skill.name}</div>\r\n\r\n                <div className='bar-wrapper'>\r\n                    <div className={`bar bg-${window.COLORS[index] || 'white'}`} style={{ width: `${skill.percentage}%` }} />\r\n                </div>\r\n            </div>\r\n        });\r\n\r\n        const experiencesContent = experiences.map(experience => {\r\n            return <div key={JSON.stringify(experience)} className='col'>\r\n                <div className='experience'>\r\n                    <div className='title'>{experience.title[lang]}</div>\r\n\r\n                    <div className='company'>{experience.company[lang]}</div>\r\n                    <div className='duration'>{experience.duration}</div>\r\n\r\n                    <div className='description'>{experience.description[lang]}</div>\r\n                </div>\r\n            </div>\r\n        });\r\n\r\n        return <Loading loading={isMounted && loading}>\r\n            <div className=\"Skills\">\r\n            <section className='skills'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-lg-6 text'>\r\n                            <SectionTitle {...cms} />\r\n\r\n                            <p dangerouslySetInnerHTML={{ __html: cms.description }} />\r\n                        </div>\r\n\r\n                        <div className='col-lg-6'>\r\n                            <div className='skills-list'>\r\n                                {skillsContent}\r\n                            </div>\r\n\r\n                            <div className='experience-list'>\r\n                                <div className='row'>\r\n                                    {experiencesContent}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        </Loading>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    get: () => dispatch(getSkills()),\r\n    reset: () => dispatch(resetSkills()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Skills));"],"names":["prefix","resetSkills","actionTypes.SKILLS_RESET","skillsStart","actionTypes.SKILLS_START","skillsSuccess","data","actionTypes.SKILLS_SUCCESS","skillsFail","error","actionTypes.SKILLS_FAIL","getSkills","dispatch","resData","Skills","Component","__publicField","cms","loading","skills","experiences","isMounted","lang","skillsContent","skill","index","jsxs","jsx","experiencesContent","experience","Loading","SectionTitle","mapStateToProps","state","mapDispatchToProps","withRouter","connect"],"mappings":"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"}