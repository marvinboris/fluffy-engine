{"version":3,"file":"index-748f4246.js","sources":["../../../resources/ts/src/containers/Frontend/Contact/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Loading from '../../../components/UI/Preloaders/Loading';\r\n\r\nimport Error from '../../../components/Messages/Error';\r\nimport Feedback from '../../../components/Messages/Feedback';\r\n\r\nimport SectionTitle from '../../../components/Frontend/UI/Title/SectionTitle';\r\n\r\nimport Input from '../../../components/UI/Input';\r\nimport Form from '../../../components/Frontend/UI/Form';\r\n\r\nimport { postContact, resetContact } from '../../../store/actions/frontend/contact';\r\n\r\nimport './Contact.scss';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n};\r\n\r\nclass Contact extends Component {\r\n    state = { ...initialState, isMounted: false, componentLoading: false }\r\n\r\n\r\n\r\n    // Component methods\r\n    saveHandler = e => {\r\n        e.preventDefault();\r\n        if (!this.props.frontend.contact.loading) this.props.post(e.target);\r\n    }\r\n\r\n    inputChangeHandler = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n\r\n\r\n    // Lifecycle methods\r\n    componentDidMount() {\r\n        this.setState({ isMounted: true, componentLoading: true }, () => setTimeout(() => {\r\n            this.setState({ componentLoading: false });\r\n        }, 250));\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.frontend.contact.message && this.props.frontend.contact.message && this.props.frontend.contact.message.type === 'success') this.setState({ ...initialState });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            content: { cms: {\r\n                pages: { frontend: { pages: { contact: cms } } }\r\n            } },\r\n            frontend: { contact: { loading, error, message: backend_message } }\r\n        } = this.props;\r\n        const { name, email, subject, message, isMounted, componentLoading } = this.state;\r\n\r\n        if (!this.state.isMounted) {\r\n            document.title = `${this.props.content.cms.pages.frontend.header.menu.contact} | ${document.head.querySelector('meta[name=\"base-title\"]').content}`;\r\n            document.querySelector('meta[name=description]').content = cms.description\r\n        }\r\n\r\n        return <Loading loading={isMounted && componentLoading}>\r\n            <div className=\"Contact\">\r\n                <section className='contact'>\r\n                    <div className='container'>\r\n                        <div className='row'>\r\n                            <div className='col-lg-6 pb-4'>\r\n                                <SectionTitle {...cms} />\r\n\r\n                                <p dangerouslySetInnerHTML={{ __html: cms.description }} />\r\n\r\n                                <Error err={error} />\r\n                                <Feedback message={backend_message} />\r\n\r\n                                <Form loading={loading} onSubmit={this.saveHandler}>\r\n                                    <div className=\"row\">\r\n                                        <Input type='text' name='name' className=\"col-md-6\" onChange={this.inputChangeHandler} value={name} placeholder={cms.form.name} disabled={loading} />\r\n                                        <Input type='email' name='email' className=\"col-md-6\" onChange={this.inputChangeHandler} value={email} placeholder={cms.form.email} disabled={loading} />\r\n                                        <Input type='text' name='subject' className=\"col-12\" onChange={this.inputChangeHandler} value={subject} placeholder={cms.form.subject} disabled={loading} />\r\n                                        <Input type='textarea' name='message' className=\"col-12\" onChange={this.inputChangeHandler} value={message} placeholder={cms.form.message} required disabled={loading} />\r\n                                    </div>\r\n\r\n                                    <div className='submit'>\r\n                                        <button className={'btn btn-outline-blue' + (loading ? ' btn-disabled' : '')}>{cms.form.submit}</button>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n\r\n                            <div className='col-lg-6'>\r\n                                <iframe title=\"Google Maps Location\" src=\"https://www.google.com/maps/d/embed?mid=15g6t8KC3sMecpCT5OQRICy613do0R7Y&ehbc=2E312F\" style={{ border: 0 }} allowFullScreen=\"\" loading=\"lazy\" referrerPolicy=\"no-referrer-when-downgrade\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Loading>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    post: data => dispatch(postContact(data)),\r\n    reset: () => dispatch(resetContact()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Contact));"],"names":["initialState","Contact","Component","__publicField","name","value","prevProps","cms","loading","error","backend_message","email","subject","message","isMounted","componentLoading","jsx","Loading","jsxs","SectionTitle","Error","Feedback","Form","Input","mapStateToProps","state","mapDispatchToProps","dispatch","data","postContact","resetContact","index","withRouter","connect"],"mappings":"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"}