{"version":3,"file":"index-079a9dc8.js","sources":["../../../resources/ts/src/containers/Backend/Manager/Features/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Components\r\nimport Action from '../../../../components/Backend/UI/List/Action';\r\n\r\nimport actions from '../../../../store/actions/backend/features';\r\nimport { updateObject, convertDate } from '../../../../shared/utility';\r\nimport * as utility from '../utility';\r\n\r\nclass Index extends Component {\r\n    state = { isMounted: false }\r\n\r\n\r\n\r\n    // Lifecycle methods\r\n    componentDidMount() {\r\n        this.props.get();\r\n        this.setState({ isMounted: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            content: {\r\n                cms: {\r\n                    pages: { backend: { components: { list: { action } }, pages: { features: { form } } } }\r\n                }\r\n            },\r\n            backend: { features: { features = [] } },\r\n        } = this.props;\r\n\r\n        const data = features.map(feature => {\r\n            return updateObject(feature, {\r\n                created_at: convertDate(feature.created_at),\r\n                action: <Action props={this.props} resource='features' item={feature} />,\r\n            });\r\n        });\r\n\r\n        return <utility.index.lifecycle.render className='Features' props={this.props} state={this.state} resource='features' data={data} fields={[\r\n            { name: form.name, key: 'name', className: 'w-100' },\r\n            { name: form.prefix, key: 'prefix' },\r\n            { name: form.created_at, key: 'created_at' },\r\n            { name: action, key: 'action', fixed: true }\r\n        ]} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    get: (page, show, search) => dispatch(actions.get(page, show, search)),\r\n    delete: id => dispatch(actions.delete(id)),\r\n    reset: () => dispatch(actions.reset()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));"],"names":["Index","Component","__publicField","action","form","features","data","feature","updateObject","convertDate","Action","utility.index","mapStateToProps","state","mapDispatchToProps","dispatch","page","show","search","actions","id","index","withRouter","connect"],"mappings":"4iBAWA,MAAMA,UAAcC,EAAAA,SAAU,CAA9B,kCACIC,EAAA,aAAQ,CAAE,UAAW,KAKrB,mBAAoB,CAChB,KAAK,MAAM,MACX,KAAK,SAAS,CAAE,UAAW,EAAM,CAAA,CACrC,CAEA,sBAAuB,CACnB,KAAK,MAAM,OACf,CAEA,QAAS,CACC,KAAA,CACF,QAAS,CACL,IAAK,CACD,MAAO,CAAE,QAAS,CAAE,WAAY,CAAE,KAAM,CAAE,OAAAC,EAAS,EAAG,MAAO,CAAE,SAAU,CAAE,KAAAC,CAAK,GAAM,CAC1F,CACJ,EACA,QAAS,CAAE,SAAU,CAAE,SAAAC,EAAW,GAAK,CAAA,EACvC,KAAK,MAEHC,EAAOD,EAAS,IAAeE,GAC1BC,EAAaD,EAAS,CACzB,WAAYE,EAAYF,EAAQ,UAAU,EAC1C,SAASG,EAAO,CAAA,MAAO,KAAK,MAAO,SAAS,WAAW,KAAMH,CAAS,CAAA,CAAA,CACzE,CACJ,EAED,SAAQI,EAAc,UAAU,OAAxB,CAA+B,UAAU,WAAW,MAAO,KAAK,MAAO,MAAO,KAAK,MAAO,SAAS,WAAW,KAAAL,EAAY,OAAQ,CACtI,CAAE,KAAMF,EAAK,KAAM,IAAK,OAAQ,UAAW,OAAQ,EACnD,CAAE,KAAMA,EAAK,OAAQ,IAAK,QAAS,EACnC,CAAE,KAAMA,EAAK,WAAY,IAAK,YAAa,EAC3C,CAAE,KAAMD,EAAQ,IAAK,SAAU,MAAO,EAAK,CAC5C,CAAA,CAAA,CACP,CACJ,CAEA,MAAMS,EAAkBC,IAAU,CAAE,GAAGA,CAAM,GAEvCC,EAAkCC,IAAA,CACpC,IAAK,CAACC,EAAMC,EAAMC,IAAWH,EAASI,EAAQ,IAAIH,EAAMC,EAAMC,CAAM,CAAC,EACrE,OAAcE,GAAAL,EAASI,EAAQ,OAAOC,CAAE,CAAC,EACzC,MAAO,IAAML,EAASI,EAAQ,OAAO,CACzC,GAEeE,EAAAC,EAAWC,EAAQX,EAAiBE,CAAkB,EAAEd,CAAK,CAAC"}