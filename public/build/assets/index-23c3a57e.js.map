{"version":3,"file":"index-23c3a57e.js","sources":["../../../resources/ts/src/containers/Backend/Manager/Experiences/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Components\r\nimport Action from '../../../../components/Backend/UI/List/Action';\r\n\r\nimport actions from '../../../../store/actions/backend/experiences';\r\nimport { updateObject, convertDate } from '../../../../shared/utility';\r\nimport * as utility from '../utility';\r\n\r\nclass Index extends Component {\r\n    state = { isMounted: false }\r\n\r\n\r\n\r\n    // Lifecycle methods\r\n    componentDidMount() {\r\n        this.props.get();\r\n        this.setState({ isMounted: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            content: {\r\n                cms: {\r\n                    pages: { backend: { components: { list: { action } }, pages: { experiences: { form } } } }\r\n                }\r\n            },\r\n            backend: { experiences: { experiences = [] } },\r\n        } = this.props;\r\n        const lang = localStorage.getItem('backend_lang');\r\n\r\n        const data = experiences.map(experience => {\r\n            return updateObject(experience, {\r\n                title: experience.title[lang],\r\n                company: experience.company[lang],\r\n                description: experience.description[lang],\r\n                created_at: convertDate(experience.created_at),\r\n                action: <Action props={this.props} resource='experiences' item={experience} />,\r\n            });\r\n        });\r\n\r\n        return <utility.index.lifecycle.render className='Experiences' props={this.props} state={this.state} resource='experiences' data={data} fields={[\r\n            { name: form.title, key: 'title' },\r\n            { name: form.company, key: 'company' },\r\n            { name: form.description, key: 'description' },\r\n            { name: form.start_year, key: 'start_year' },\r\n            { name: form.end_year, key: 'end_year' },\r\n            { name: form.created_at, key: 'created_at' },\r\n            { name: action, key: 'action', fixed: true }\r\n        ]} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    get: (page, show, search) => dispatch(actions.get(page, show, search)),\r\n    delete: id => dispatch(actions.delete(id)),\r\n    reset: () => dispatch(actions.reset()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));"],"names":["Index","Component","__publicField","action","form","experiences","lang","data","experience","updateObject","convertDate","Action","utility.index","mapStateToProps","state","mapDispatchToProps","dispatch","page","show","search","actions","id","index","withRouter","connect"],"mappings":"ojBAWA,MAAMA,UAAcC,EAAAA,SAAU,CAA9B,kCACIC,EAAA,aAAQ,CAAE,UAAW,KAKrB,mBAAoB,CAChB,KAAK,MAAM,MACX,KAAK,SAAS,CAAE,UAAW,EAAM,CAAA,CACrC,CAEA,sBAAuB,CACnB,KAAK,MAAM,OACf,CAEA,QAAS,CACC,KAAA,CACF,QAAS,CACL,IAAK,CACD,MAAO,CAAE,QAAS,CAAE,WAAY,CAAE,KAAM,CAAE,OAAAC,EAAS,EAAG,MAAO,CAAE,YAAa,CAAE,KAAAC,CAAK,GAAM,CAC7F,CACJ,EACA,QAAS,CAAE,YAAa,CAAE,YAAAC,EAAc,GAAK,CAAA,EAC7C,KAAK,MACHC,EAAO,aAAa,QAAQ,cAAc,EAE1CC,EAAOF,EAAY,IAAkBG,GAChCC,EAAaD,EAAY,CAC5B,MAAOA,EAAW,MAAMF,CAAI,EAC5B,QAASE,EAAW,QAAQF,CAAI,EAChC,YAAaE,EAAW,YAAYF,CAAI,EACxC,WAAYI,EAAYF,EAAW,UAAU,EAC7C,SAASG,EAAO,CAAA,MAAO,KAAK,MAAO,SAAS,cAAc,KAAMH,CAAY,CAAA,CAAA,CAC/E,CACJ,EAED,SAAQI,EAAc,UAAU,OAAxB,CAA+B,UAAU,cAAc,MAAO,KAAK,MAAO,MAAO,KAAK,MAAO,SAAS,cAAc,KAAAL,EAAY,OAAQ,CAC5I,CAAE,KAAMH,EAAK,MAAO,IAAK,OAAQ,EACjC,CAAE,KAAMA,EAAK,QAAS,IAAK,SAAU,EACrC,CAAE,KAAMA,EAAK,YAAa,IAAK,aAAc,EAC7C,CAAE,KAAMA,EAAK,WAAY,IAAK,YAAa,EAC3C,CAAE,KAAMA,EAAK,SAAU,IAAK,UAAW,EACvC,CAAE,KAAMA,EAAK,WAAY,IAAK,YAAa,EAC3C,CAAE,KAAMD,EAAQ,IAAK,SAAU,MAAO,EAAK,CAC5C,CAAA,CAAA,CACP,CACJ,CAEA,MAAMU,EAAkBC,IAAU,CAAE,GAAGA,CAAM,GAEvCC,EAAkCC,IAAA,CACpC,IAAK,CAACC,EAAMC,EAAMC,IAAWH,EAASI,EAAQ,IAAIH,EAAMC,EAAMC,CAAM,CAAC,EACrE,OAAcE,GAAAL,EAASI,EAAQ,OAAOC,CAAE,CAAC,EACzC,MAAO,IAAML,EAASI,EAAQ,OAAO,CACzC,GAEeE,EAAAC,EAAWC,EAAQX,EAAiBE,CAAkB,EAAEf,CAAK,CAAC"}