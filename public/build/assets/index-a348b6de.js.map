{"version":3,"file":"index-a348b6de.js","sources":["../../../resources/ts/src/containers/Backend/Admin/Admins/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Components\r\nimport Error from '../../../../components/Messages/Error';\r\nimport Feedback from '../../../../components/Messages/Feedback';\r\n\r\nimport List from '../../../../components/Backend/UI/List';\r\nimport Photo from '../../../../components/Backend/UI/List/Photo';\r\nimport Action from '../../../../components/Backend/UI/List/Action';\r\nimport PageTitle from '../../../../components/Backend/UI/Title/PageTitle';\r\nimport Breadcrumb from '../../../../components/Backend/UI/Title/Breadcrumb';\r\n\r\nimport { getAdmins, deleteAdmins, resetAdmins } from '../../../../store/actions/backend/admins';\r\nimport { updateObject, convertDate, } from '../../../../shared/utility';\r\n\r\nclass Index extends Component {\r\n    componentDidMount() {\r\n        this.props.get();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            content: {\r\n                cms: {\r\n                    pages: { backend: { components: { list: { action, see } }, pages: { admins: { icon, title, add, index, form } } } }\r\n                }\r\n            },\r\n            backend: { admins: { loading, error, message, admins = [], total } },\r\n        } = this.props;\r\n\r\n        const errors = <>\r\n            <Error err={error} />\r\n        </>;\r\n        const flash = this.props.location.state ? <Feedback time={5000} message={this.props.location.state.message} /> : null;\r\n        const feedback = <Feedback message={message} />;\r\n\r\n        const data = admins.map(admin => {\r\n            return updateObject(admin, {\r\n                created_at: convertDate(admin.created_at),\r\n                photo: <Photo photo={admin.photo} see={see} title={`${form.admin_photo}: ${admin.name}`} />,\r\n                action: <Action link='/admin/admins' resource={admin} deleteAction={this.props.delete} />,\r\n            });\r\n        });\r\n\r\n        const content = <List array={data} loading={loading} data={JSON.stringify(admins)} get={this.props.get} total={total} bordered add={add} link=\"/admin/admins/add\" icon={icon} title={index} className=\"shadow-sm\"\r\n            fields={[\r\n                { name: form.full_name, key: 'name' },\r\n                { name: form.email, key: 'email' },\r\n                { name: form.phone, key: 'phone' },\r\n                { name: form.photo, key: 'photo' },\r\n                { name: action, key: 'action', fixed: true }\r\n            ]} />;\r\n\r\n        return <div className='Admins'>\r\n            <PageTitle title={title} subtitle={index}>\r\n                <Breadcrumb main={index} />\r\n            </PageTitle>\r\n\r\n            <div className='content'>\r\n                {errors}\r\n                {flash}\r\n                {feedback}\r\n                {content}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    get: (page, show, search) => dispatch(getAdmins(page, show, search)),\r\n    delete: id => dispatch(deleteAdmins(id)),\r\n    reset: () => dispatch(resetAdmins()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));"],"names":["Index","Component","action","see","icon","title","add","index","form","loading","error","message","admins","total","errors","jsx","Fragment","Error","flash","Feedback","feedback","data","admin","updateObject","convertDate","Photo","Action","content","List","jsxs","PageTitle","Breadcrumb","mapStateToProps","state","mapDispatchToProps","dispatch","page","show","search","getAdmins","id","deleteAdmins","resetAdmins","withRouter","connect"],"mappings":"uZAiBA,MAAMA,UAAcC,EAAAA,SAAU,CAC1B,mBAAoB,CAChB,KAAK,MAAM,KACf,CAEA,sBAAuB,CACnB,KAAK,MAAM,OACf,CAEA,QAAS,CACC,KAAA,CACF,QAAS,CACL,IAAK,CACD,MAAO,CAAE,QAAS,CAAE,WAAY,CAAE,KAAM,CAAE,OAAAC,EAAQ,IAAAC,IAAS,MAAO,CAAE,OAAQ,CAAE,KAAAC,EAAM,MAAAC,EAAO,IAAAC,EAAK,MAAAC,EAAO,KAAAC,CAAO,CAAA,EAAI,CACtH,CACJ,EACA,QAAS,CAAE,OAAQ,CAAE,QAAAC,EAAS,MAAAC,EAAO,QAAAC,EAAS,OAAAC,EAAS,GAAI,MAAAC,EAAQ,CAAA,EACnE,KAAK,MAEHC,EACFC,EAAAC,EAAA,CAAA,SAAAD,EAACE,EAAM,CAAA,IAAKP,CAAO,CAAA,CACvB,CAAA,EACMQ,EAAQ,KAAK,MAAM,SAAS,MAASH,EAAAI,EAAA,CAAS,KAAM,IAAM,QAAS,KAAK,MAAM,SAAS,MAAM,QAAS,EAAK,KAC3GC,EAAYL,EAAAI,EAAA,CAAS,QAAAR,CAAkB,CAAA,EAEvCU,EAAOT,EAAO,IAAaU,GACtBC,EAAaD,EAAO,CACvB,WAAYE,EAAYF,EAAM,UAAU,EACxC,MAAOP,EAACU,EAAM,CAAA,MAAOH,EAAM,MAAO,IAAAnB,EAAU,MAAO,GAAGK,EAAK,gBAAgBc,EAAM,OAAQ,EACzF,OAASP,EAAAW,EAAA,CAAO,KAAK,gBAAgB,SAAUJ,EAAO,aAAc,KAAK,MAAM,MAAQ,CAAA,CAAA,CAC1F,CACJ,EAEKK,EAAUZ,EAACa,EAAA,CAAK,MAAOP,EAAM,QAAAZ,EAAkB,KAAM,KAAK,UAAUG,CAAM,EAAG,IAAK,KAAK,MAAM,IAAK,MAAAC,EAAc,SAAQ,GAAC,IAAAP,EAAU,KAAK,oBAAoB,KAAAF,EAAY,MAAOG,EAAO,UAAU,YAClM,OAAQ,CACJ,CAAE,KAAMC,EAAK,UAAW,IAAK,MAAO,EACpC,CAAE,KAAMA,EAAK,MAAO,IAAK,OAAQ,EACjC,CAAE,KAAMA,EAAK,MAAO,IAAK,OAAQ,EACjC,CAAE,KAAMA,EAAK,MAAO,IAAK,OAAQ,EACjC,CAAE,KAAMN,EAAQ,IAAK,SAAU,MAAO,EAAK,CAC/C,CAAA,CAAA,EAEG,OAAA2B,EAAC,MAAI,CAAA,UAAU,SAClB,SAAA,CAACd,EAAAe,EAAA,CAAU,MAAAzB,EAAc,SAAUE,EAC/B,WAACwB,EAAW,CAAA,KAAMxB,EAAO,CAC7B,CAAA,EAEAsB,EAAC,MAAI,CAAA,UAAU,UACV,SAAA,CAAAf,EACAI,EACAE,EACAO,CAAA,EACL,CACJ,CAAA,CAAA,CACJ,CACJ,CAEA,MAAMK,EAAkBC,IAAU,CAAE,GAAGA,CAAM,GAEvCC,EAAkCC,IAAA,CACpC,IAAK,CAACC,EAAMC,EAAMC,IAAWH,EAASI,EAAUH,EAAMC,EAAMC,CAAM,CAAC,EACnE,OAAQE,GAAML,EAASM,EAAaD,CAAE,CAAC,EACvC,MAAO,IAAML,EAASO,GAAa,CACvC,GAEenC,EAAAoC,EAAWC,EAAQZ,EAAiBE,CAAkB,EAAElC,CAAK,CAAC"}