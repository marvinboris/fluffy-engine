{"version":3,"file":"Global-d3b1bbce.js","sources":["../../../resources/ts/src/containers/Backend/Manager/Cms/Global.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Components\r\nimport Loading from '../../../../components/UI/Preloaders/Loading';\r\n\r\nimport Error from '../../../../components/Messages/Error';\r\nimport Feedback from '../../../../components/Messages/Feedback';\r\n\r\nimport Form from '../../../../components/Backend/UI/Form';\r\nimport PageTitle from '../../../../components/Backend/UI/Title/PageTitle';\r\nimport Breadcrumb from '../../../../components/Backend/UI/Title/Breadcrumb';\r\n\r\nimport Input from '../../../../components/UI/Input';\r\n\r\nimport { getCms, patchCms, resetCms } from '../../../../store/actions/backend/cms';\r\nimport { updateObject } from '../../../../shared/utility';\r\n\r\nclass Global extends Component {\r\n    state = {\r\n        app_name: '',\r\n        company_name: '',\r\n        company_logo: null,\r\n        logo: {},\r\n\r\n        isMounted: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.backend.cms.cms && prevState.app_name === '') {\r\n            const { backend: { cms: { cms: { global } } } } = nextProps;\r\n            return updateObject(prevState, { ...global });\r\n        }\r\n        return prevState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.reset();\r\n        this.props.get();\r\n        this.setState({ isMounted: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n        this.props.patch(e.target);\r\n    }\r\n\r\n    inputChangeHandler = e => {\r\n        const { name, value, files } = e.target;\r\n        this.setState({ [name]: files ? files[0] : value });\r\n    }\r\n\r\n    fileUpload = id => document.getElementById(id).click()\r\n\r\n    render() {\r\n        const {\r\n            content: {\r\n                cms: {\r\n                    pages: { backend: { components: { form: { save } }, pages: { cms: { icon, title, global, form } } } }\r\n                }\r\n            },\r\n            backend: { cms: { loading, error, message, cms } },\r\n            auth: { role }\r\n        } = this.props;\r\n        const { logo, app_name, company_name, company_logo } = this.state;\r\n\r\n        if (!this.state.isMounted) document.title = `${this.props.content.cms.pages.backend.sidebar.menu.cms.global} | ${document.head.querySelector('meta[name=\"base-title\"]').content}`;\r\n\r\n        const content = !!cms && <div className='row'>\r\n            <div className='col-lg-9'>\r\n                <div className='row'>\r\n                    <input type=\"hidden\" name=\"_method\" defaultValue=\"PATCH\" />\r\n\r\n                    <Input type=\"text\" className=\"col-md-6\" onChange={this.inputChangeHandler} value={app_name} name=\"app_name\" required label={form.app_name} />\r\n                    <Input type=\"text\" className=\"col-md-6\" onChange={this.inputChangeHandler} value={company_name} name=\"company_name\" required label={form.company_name} />\r\n                    {Object.keys(cms.global.logo).map(key => <Input type=\"image\" key={'logo-' + key} className='col-md-6 col-xl-4' id={\"logo-\" + key} name={\"logo[\" + key + \"]\"} label={form.logo + '(' + key + ')'} onClick={() => this.fileUpload('logo-' + key)} cms={form} defaultValue={cms.global.logo[key]} value={logo[key]} dimensions=\"16by9\" />)}\r\n\r\n                    <div className=\"col-12\" style={{ marginTop: 40 }}>\r\n                        <button className={`btn btn-${window.APP_PRIMARY_COLOR}`}>{save}<i className='fas fa-save' /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='col-lg-3'>\r\n                <Input type=\"image\" id=\"company_logo\" name=\"company_logo\" label={form.company_logo} onClick={() => this.fileUpload('company_logo')} cms={form} defaultValue={cms.global.company_logo} value={company_logo} />\r\n            </div>\r\n        </div>;\r\n\r\n        return <div className='Cms Global'>\r\n            <PageTitle title={title} subtitle={global} icon={icon}>\r\n                <Breadcrumb main={global} />\r\n            </PageTitle>\r\n\r\n            <Loading loading={this.state.isMounted && loading} isAuthenticated>\r\n                <div className='content'>\r\n                    <Error err={error} />\r\n                    <Feedback message={message} />\r\n                    <Form onSubmit={this.submitHandler} icon={icon} title={global} link={`/${role}/cms`} innerClassName=\"row\">\r\n                        <input type=\"file\" id=\"company_logo\" name=\"company_logo\" className=\"d-none\" onChange={this.inputChangeHandler} accept=\".png,.jpg,.jpeg\" />\r\n                        <input type=\"file\" id=\"logo-big\" name=\"logo[big]\" className=\"d-none\" onChange={this.inputChangeHandler} accept=\".png,.jpg,.jpeg\" />\r\n                        <input type=\"file\" id=\"logo-dark\" name=\"logo[dark]\" className=\"d-none\" onChange={this.inputChangeHandler} accept=\".png,.jpg,.jpeg\" />\r\n                        <input type=\"file\" id=\"logo-default\" name=\"logo[default]\" className=\"d-none\" onChange={this.inputChangeHandler} accept=\".png,.jpg,.jpeg\" />\r\n                        <input type=\"file\" id=\"logo-light\" name=\"logo[light]\" className=\"d-none\" onChange={this.inputChangeHandler} accept=\".png,.jpg,.jpeg\" />\r\n                        <input type=\"file\" id=\"logo-named\" name=\"logo[named]\" className=\"d-none\" onChange={this.inputChangeHandler} accept=\".png,.jpg,.jpeg\" />\r\n                        {content}\r\n                    </Form>\r\n                </div>\r\n            </Loading>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    get: () => dispatch(getCms()),\r\n    patch: data => dispatch(patchCms('global', data)),\r\n    reset: () => dispatch(resetCms()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Global));"],"names":["Global","Component","__publicField","e","name","value","files","id","nextProps","prevState","global","updateObject","save","icon","title","form","loading","error","message","cms","role","logo","app_name","company_name","company_logo","content","jsxs","jsx","Input","key","PageTitle","Breadcrumb","Loading","Error","Feedback","Form","mapStateToProps","state","mapDispatchToProps","dispatch","getCms","data","patchCms","resetCms","Global$1","withRouter","connect"],"mappings":"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"}